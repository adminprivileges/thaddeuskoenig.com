<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DLL Hijacking on Thaddeus Koenig</title><link>https://thaddeuskoenig.com/tags/dll-hijacking/</link><description>Recent content in DLL Hijacking on Thaddeus Koenig</description><generator>Hugo</generator><language>en</language><copyright>Â© 2025 Thaddeus Koenig</copyright><lastBuildDate>Wed, 12 Feb 2025 11:33:30 -0500</lastBuildDate><atom:link href="https://thaddeuskoenig.com/tags/dll-hijacking/index.xml" rel="self" type="application/rss+xml"/><item><title>06FEB25 - DLL Hijacking</title><link>https://thaddeuskoenig.com/blog/20250206/</link><pubDate>Thu, 06 Feb 2025 06:30:00 -0500</pubDate><guid>https://thaddeuskoenig.com/blog/20250206/</guid><description>Today I was looking at something new to learn and I came accross some material on DLL Hijacking. Previously I was only really aware of DLL search order hijacking, but I was interested to see that theres actually several varients to this idea. It may be best to first explain what a DLL is before talking about methods of manipulation. A DLL is a shared object or a snippet of code that several applications and operating system components can import for many common functions as to not have to re-invent the wheel on many things.</description></item></channel></rss>